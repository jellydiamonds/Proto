package com.jellydiamonds.android.metier;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Hashtable;
import java.util.List;
import java.util.Map;

public class JellyCollection implements Serializable {
	
	/**
	 * 
	 */
	private static final long serialVersionUID = -3082987100213107689L;
	
	private String 				mOwnerID = null;
	private List<GemID> 		mLocalCollection = null;
	
	// Key is GemID reference, GemID must be synced
	private Map<String,GemID> 	mSyncedCollection = null;
	

	private JellyCollection( String ownerID )
	{
		this.mOwnerID = ownerID;
		/**
		 * 	Only Gems which haven't yet their gem reference number
		 */
		this.mLocalCollection = new ArrayList<GemID>();
		
		/**
		 * Gems synced with JellyDiamonds
		 */
		this.mSyncedCollection = new Hashtable<String,GemID>();
		
	}
	
	public String getOwner()
	{
		return this.mOwnerID;
	}
	
	public void setOwner( String owner)
	{
		this.mOwnerID = owner;
	}
	
	public int getNumberOfGems()
	{
		return (this.mLocalCollection.size() + this.mSyncedCollection.size());
	}
	
	public Collection<GemID> getAllGems()
	{
		Collection<GemID> l_gems = new ArrayList<GemID>();
		
		for( GemID l_tmp_gem : this.mSyncedCollection.values() )
			l_gems.add(l_tmp_gem);
		
		for( GemID l_tmp_gem : this.mLocalCollection)
			l_gems.add(l_tmp_gem);
		
		return l_gems;
	}
	
	public int getNumberOfSyncedGems()
	{
		return this.mSyncedCollection.size();
	}
	
	public int getNumberOfLocalGems()
	{
		return this.mLocalCollection.size();
	}
	
	public List<GemID> getLocalCollection()
	{
		return this.mLocalCollection;
	}
	
	public Map<String,GemID> getSyncedCollection()
	{
		return this.mSyncedCollection;
	}
}
