package com.jellydiamonds.android.camera;

import android.graphics.ImageFormat;
import android.hardware.Camera;
import android.hardware.Camera.Size;
import android.os.Build;
import android.os.Bundle;
import android.annotation.TargetApi;
import android.app.Activity;
import android.util.Log;
import android.view.Menu;
import android.view.ViewGroup;
import android.widget.FrameLayout;

@TargetApi(Build.VERSION_CODES.GINGERBREAD)
public class MainActivity extends Activity {

	 	private Camera mCamera = null;
	    private Preview mSurfaceView = null;
	    private FrameLayout mFrameLayout = null;

	    @Override
	    protected void onCreate(Bundle savedInstanceState) {
	        // TODO Auto-generated method stub
	        super.onCreate(savedInstanceState);

	        setContentView(R.layout.activity_main);
	    }

	    @Override
	    protected void onDestroy() {
	        // TODO Auto-generated method stub
	        super.onDestroy();
	        releaseCamera();
	    }

	    @Override
	    protected void onPause() {
	        // TODO Auto-generated method stub
	        super.onPause();

	        releaseCamera();
	    }

	    @Override
	    protected void onResume() {
	        // TODO Auto-generated method stub
	        super.onResume();

	        mCamera = Camera.open();

	        Camera.Parameters p = mCamera.getParameters();
	        Size size = p.getPreviewSize();
	        int width = size.width;
	        int height = size.height;
	        p.setPreviewFormat(ImageFormat.JPEG);
	        mCamera.setParameters(p);


	        mSurfaceView = new Preview(this);

	        ViewGroup.LayoutParams layoutParams = new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);

	        mSurfaceView.setLayoutParams(layoutParams);

	        mFrameLayout = (FrameLayout)findViewById(R.id.preview);

	        mFrameLayout.addView(mSurfaceView);

	        mSurfaceView.showSupportedCameraFormats(p);
	    }

	    public void releaseCamera()
	    {
	        if (mCamera != null)
	        {
	            mCamera.stopPreview();
	            mCamera.setPreviewCallback(null);
	            mSurfaceView.getHolder().removeCallback(mSurfaceView);
	            mCamera.release();        // release the camera for other applications
	            mCamera = null;

	            mSurfaceView.mHolder.removeCallback(mSurfaceView);
	            mSurfaceView.mHolder = null;

	            mSurfaceView = null;

	            mFrameLayout.removeAllViews();
	            mFrameLayout.removeAllViewsInLayout();
	            mFrameLayout = null;
	        }

	    }
	
}

//	private Camera mCamera = null;
//	private Preview mPreview = null;
//	
//	@Override
//	protected void onCreate(Bundle savedInstanceState) {
//		super.onCreate(savedInstanceState);
//		setContentView(R.layout.activity_main);
//		mPreview = new Preview( getApplicationContext() );
//		
//	}
//
//	@Override
//	public boolean onCreateOptionsMenu(Menu menu) {
//		// Inflate the menu; this adds items to the action bar if it is present.
//		getMenuInflater().inflate(R.menu.main, menu);
//		return true;
//	}
//	
//	@Override
//	protected void onResume() {
//		// TODO Auto-generated method stub
//		super.onResume();
//		safeCameraOpen();
//		if( mCamera != null )
//			mPreview.setCamera(mCamera);
//	}
//	
//	@Override
//	protected void onPause() {
//		// TODO Auto-generated method stub
//		super.onPause();
//		releaseCameraAndPreview();
//	}
//	
//	private boolean safeCameraOpen() {
//	    boolean qOpened = false;
//	  
//	    try {
//	        releaseCameraAndPreview();
//	        mCamera = Camera.open();
//	        qOpened = (mCamera != null);
//	    } catch (Exception e) {
//	        Log.e(getString(R.string.app_name), "failed to open Camera");
//	        e.printStackTrace();
//	    }
//	    
//	    return qOpened;    
//	}
//
//	private void releaseCameraAndPreview() {
//	    mPreview.setCamera(null);
//	    if (mCamera != null) {
//	        mCamera.release();
//	        mCamera = null;
//	    }
//	}


